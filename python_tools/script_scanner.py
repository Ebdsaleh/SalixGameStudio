import os
import re
''' --- IMPORTANT must include this in the main.cpp ---'''
"""
#include "Generated/ScriptInitList.h"
"""
SCRIPT_DIR = "src/Sandbox/TestProject/Assets/Scripts"
OUTPUT_FILE = "src/Sandbox/TestProject/Generated/ScriptInitList.h"

def find_script_classes():
    script_names = []

    for filename in os.listdir(SCRIPT_DIR):
        if filename.endswith(".cpp"):
            path = os.path.join(SCRIPT_DIR, filename)
            with open(path, "r") as file:
                contents = file.read()

                # Match classes that inherit from CppScript
                matches = re.findall(r"class\s+(\w+)\s*:\s*public\s+Salix::CppScript", contents)
                script_names.extend(matches)

    return script_names

def generate_header(script_names):
    os.makedirs(os.path.dirname(OUTPUT_FILE), exist_ok=True)
    with open(OUTPUT_FILE, "w") as file:
        file.write("// This file is auto-generated by generate_script_init_list.py\n")
        file.write("#pragma once\n")
        file.write("#include <cereal/cereal.hpp>\n\n")
        for name in script_names:
            file.write(f"CEREAL_DYNAMIC_INIT({name});\n")

if __name__ == "__main__":
    script_names = find_script_classes()
    generate_header(script_names)
    print(f"Generated {OUTPUT_FILE} with {len(script_names)} script(s).")
