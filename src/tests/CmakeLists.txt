# src/Tests/CMakeLists.txt

include("${CMAKE_SOURCE_DIR}/vendor/doctest/scripts/cmake/doctest.cmake")

# Add an option to enable/disable coverage, defaulting to OFF
option(ENABLE_COVERAGE "Enable code coverage generation with OpenCppCoverage" OFF)

function(create_salix_test_suite MODULE_NAME)
    file(GLOB_RECURSE TEST_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/${MODULE_NAME}/*.test.cpp")

    if(TEST_SOURCES)
        set(EXECUTABLE_NAME "${MODULE_NAME}_tests")
        add_executable(${EXECUTABLE_NAME} main.cpp ${TEST_SOURCES})

        # 1. Add the definition to the LIBRARY being tested (e.g., SalixEngine.dll)
        #    PUBLIC makes the definition apply to the library AND anything that links to it.
        target_compile_definitions(${MODULE_NAME} PUBLIC SALIX_TESTS_ENABLED)

        # 2. Add the definition to the TEST EXECUTABLE itself.
        #    PRIVATE is sufficient here as it only applies to the executable's own sources.
        target_compile_definitions(${EXECUTABLE_NAME} PRIVATE SALIX_TESTS_ENABLED)

        target_link_libraries(${EXECUTABLE_NAME} PRIVATE
            ${MODULE_NAME} ${ARGN} doctest)

        if(ENABLE_COVERAGE)
            # Convert CMake's forward-slash paths to native Windows backslashes
            file(TO_NATIVE_PATH "${CMAKE_SOURCE_DIR}/src/Salix" NATIVE_SALIX_SRC_PATH)
            file(TO_NATIVE_PATH "${CMAKE_SOURCE_DIR}/src/Editor" NATIVE_EDITOR_SRC_PATH)
            add_test(
                NAME ${EXECUTABLE_NAME}_Coverage
                COMMAND ${OPENCPPCOVERAGE_EXECUTABLE}
                    --sources "${NATIVE_SALIX_SRC_PATH}"
                    --sources "${NATIVE_EDITOR_SRC_PATH}"
                    --export_type=html:coverage_report_${MODULE_NAME}
                    -- $<TARGET_FILE:${EXECUTABLE_NAME}>
            )
        else()
            # Does not organize the tests into their declared TEST_SUITE's
            doctest_discover_tests(${EXECUTABLE_NAME}
                #WORKING_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_CFG_INTDIR}
                DISCOVERY_ARGS --list-test-suite
            )
        endif()
    endif()
endfunction()

if(ENABLE_COVERAGE)
    find_program(OPENCPPCOVERAGE_EXECUTABLE OpenCppCoverage.exe)
    if(NOT OPENCPPCOVERAGE_EXECUTABLE)
        message(FATAL_ERROR "OpenCppCoverage.exe not found. Please add it to your system PATH.")
    else()
        message(STATUS "Code coverage enabled. Found OpenCppCoverage at: ${OPENCPPCOVERAGE_EXECUTABLE}")
    endif()
endif()

create_salix_test_suite(SalixEngine)
create_salix_test_suite(SalixEditor SalixEngine)
# The Game test suite is commented out as there are no test files for it yet.
# create_salix_test_suite(Game SalixEngine)

if(MSVC AND ENABLE_COVERAGE)
    message(STATUS "Applying MSVC /PROFILE flags for coverage.")
    if(TARGET SalixEngine_tests)
        # target_compile_options(SalixEngine_tests PRIVATE $<$<CONFIG:Debug>:/PROFILE>)
        target_link_options(SalixEngine_tests PRIVATE $<$<CONFIG:Debug>:/PROFILE>)
    endif()
    if(TARGET SalixEditor_tests)
        # target_compile_options(SalixEditor_tests PRIVATE $<$<CONFIG:Debug>:/PROFILE>)
        target_link_options(SalixEditor_tests PRIVATE $<$<CONFIG:Debug>:/PROFILE>)
    endif()
endif()